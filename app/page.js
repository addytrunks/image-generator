'use client'

import { Card } from '@/components/Card';
import FormField from '@/components/FormField';
import Loader from '@/components/Loader';
import { useEffect, useState } from 'react'

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return (
      data.map((post) => <Card key={post._id} {...post} />)
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

export default function Home() {

  useEffect(() => {
    const getData = async () => {
      setLoading(true)
      const res = await fetch('/api/posts',{method:'GET'})
      const result = await res.json()
      setAllPosts(result.data.reverse())
      setLoading(false)
    }
    getData();
  },[])


  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState();
  const [searchPosts,setSearchPosts] = useState()
  const [searchText, setSearchText] = useState('');

   const handleSearch = (e) => {
    setSearchText(e.target.value)
    const filteredPosts = allPosts.filter(post => post.prompt.toLowerCase().includes(searchText.toLowerCase()))
    setSearchPosts(filteredPosts)
  }

  
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[14px]">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearch}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                <RenderCards
                  data={searchText.length > 0 ? searchPosts : allPosts}
                  title="No Posts found"
                />
            </div>
          </>
        )}
      </div>
    </section>
  )
}
